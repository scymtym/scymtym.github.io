var searchData = [
  ["Function Index", "#function-index"],
  ["Footnotes", "#footnotes"],
  ["Function and Macro and Variable and Type Index", "#function-and-macro-and-variable-and-type-index"],
  ["Concept Index", "#concept-index"],
  ["(setf find-package) [parcl.low]", "#function-(setf-find-package)-[parcl.low]"],
  ["Generic-Function parcl.low|(setf find-package)", "#nil-generic-function-parcl.low|(setf-find-package)"],
  ["find-package [parcl.low]", "#function-find-package-[parcl.low]"],
  ["Generic-Function parcl.low|find-package", "#nil-generic-function-parcl.low|find-package"],
  ["packages [parcl.low]", "#function-packages-[parcl.low]"],
  ["Generic-Function parcl.low|packages", "#nil-generic-function-parcl.low|packages"],
  ["3.3.5.4 Low Environment Functions", "#3.3.5.4-low-environment-functions"],
  ["set-symbol-entry [parcl.low]", "#function-set-symbol-entry-[parcl.low]"],
  ["Generic-Function parcl.low|set-symbol-entry", "#nil-generic-function-parcl.low|set-symbol-entry"],
  ["symbol-entry [parcl.low]", "#function-symbol-entry-[parcl.low]"],
  ["Generic-Function parcl.low|symbol-entry", "#nil-generic-function-parcl.low|symbol-entry"],
  ["symbol-entries [parcl.low]", "#function-symbol-entries-[parcl.low]"],
  ["Generic-Function parcl.low|symbol-entries", "#nil-generic-function-parcl.low|symbol-entries"],
  ["map-symbol-entries [parcl.low]", "#function-map-symbol-entries-[parcl.low]"],
  ["Generic-Function parcl.low|map-symbol-entries", "#nil-generic-function-parcl.low|map-symbol-entries"],
  ["term-shadow-status", "#nil-term-shadow-status"],
  ["term-export-status", "#nil-term-export-status"],
  ["term-symbol-entry", "#nil-term-symbol-entry"],
  ["symbol entry", "#concept-symbol-entry"],
  ["3.3.5.3 Low Package-symbol Relation Functions", "#3.3.5.3-low-package-symbol-relation-functions"],
  ["make-package-object [parcl.low]", "#function-make-package-object-[parcl.low]"],
  ["Generic-Function parcl.low|make-package-object", "#nil-generic-function-parcl.low|make-package-object"],
  ["(setf documentation) [parcl.low]", "#function-(setf-documentation)-[parcl.low]"],
  ["Generic-Function parcl.low|(setf documentation)", "#nil-generic-function-parcl.low|(setf-documentation)"],
  ["documentation [parcl.low]", "#function-documentation-[parcl.low]"],
  ["Generic-Function parcl.low|documentation", "#nil-generic-function-parcl.low|documentation"],
  ["(setf used-by-list) [parcl.low]", "#function-(setf-used-by-list)-[parcl.low]"],
  ["Generic-Function parcl.low|(setf used-by-list)", "#nil-generic-function-parcl.low|(setf-used-by-list)"],
  ["used-by-list [parcl.low]", "#function-used-by-list-[parcl.low]"],
  ["Generic-Function parcl.low|used-by-list", "#nil-generic-function-parcl.low|used-by-list"],
  ["(setf use-list) [parcl.low]", "#function-(setf-use-list)-[parcl.low]"],
  ["Generic-Function parcl.low|(setf use-list)", "#nil-generic-function-parcl.low|(setf-use-list)"],
  ["use-list [parcl.low]", "#function-use-list-[parcl.low]"],
  ["Generic-Function parcl.low|use-list", "#nil-generic-function-parcl.low|use-list"],
  ["(setf nicknames) [parcl.low]", "#function-(setf-nicknames)-[parcl.low]"],
  ["Generic-Function parcl.low|(setf nicknames)", "#nil-generic-function-parcl.low|(setf-nicknames)"],
  ["nicknames [parcl.low]", "#function-nicknames-[parcl.low]"],
  ["Generic-Function parcl.low|nicknames", "#nil-generic-function-parcl.low|nicknames"],
  ["(setf name) [parcl.low]", "#function-(setf-name)-[parcl.low]"],
  ["Generic-Function parcl.low|(setf name)", "#nil-generic-function-parcl.low|(setf-name)"],
  ["name [parcl.low]", "#function-name-[parcl.low]"],
  ["Generic-Function parcl.low|name", "#nil-generic-function-parcl.low|name"],
  ["packagep [parcl.low]", "#function-packagep-[parcl.low]"],
  ["Generic-Function parcl.low|packagep", "#nil-generic-function-parcl.low|packagep"],
  ["3.3.5.2 Low Package Functions", "#3.3.5.2-low-package-functions"],
  ["make-symbol [parcl.low]", "#function-make-symbol-[parcl.low]"],
  ["Generic-Function parcl.low|make-symbol", "#nil-generic-function-parcl.low|make-symbol"],
  ["(setf symbol-package) [parcl.low]", "#function-(setf-symbol-package)-[parcl.low]"],
  ["Generic-Function parcl.low|(setf symbol-package)", "#nil-generic-function-parcl.low|(setf-symbol-package)"],
  ["symbol-package [parcl.low]", "#function-symbol-package-[parcl.low]"],
  ["Generic-Function parcl.low|symbol-package", "#nil-generic-function-parcl.low|symbol-package"],
  ["symbol-name [parcl.low]", "#function-symbol-name-[parcl.low]"],
  ["Generic-Function parcl.low|symbol-name", "#nil-generic-function-parcl.low|symbol-name"],
  ["symbolp [parcl.low]", "#function-symbolp-[parcl.low]"],
  ["Generic-Function parcl.low|symbolp", "#nil-generic-function-parcl.low|symbolp"],
  ["3.3.5.1 Low Symbol Functions", "#3.3.5.1-low-symbol-functions"],
  ["3.3.5 Low Module", "#3.3.5-low-module"],
  ["find-symbols [parcl.middle]", "#function-find-symbols-[parcl.middle]"],
  ["Generic-Function parcl.middle|find-symbols", "#nil-generic-function-parcl.middle|find-symbols"],
  ["rename-package [parcl.middle]", "#function-rename-package-[parcl.middle]"],
  ["Generic-Function parcl.middle|rename-package", "#nil-generic-function-parcl.middle|rename-package"],
  ["delete-package [parcl.middle]", "#function-delete-package-[parcl.middle]"],
  ["Generic-Function parcl.middle|delete-package", "#nil-generic-function-parcl.middle|delete-package"],
  ["make-package [parcl.middle]", "#function-make-package-[parcl.middle]"],
  ["Generic-Function parcl.middle|make-package", "#nil-generic-function-parcl.middle|make-package"],
  ["find-package-using-package [parcl.middle]", "#function-find-package-using-package-[parcl.middle]"],
  ["Generic-Function parcl.middle|find-package-using-package", "#nil-generic-function-parcl.middle|find-package-using-package"],
  ["packages [parcl.middle]", "#function-packages-[parcl.middle]"],
  ["Generic-Function parcl.middle|packages", "#nil-generic-function-parcl.middle|packages"],
  ["3.3.4.5 Middle Environment Functions", "#3.3.4.5-middle-environment-functions"],
  ["shadowing-import [parcl.middle]", "#function-shadowing-import-[parcl.middle]"],
  ["Generic-Function parcl.middle|shadowing-import", "#nil-generic-function-parcl.middle|shadowing-import"],
  ["shadow [parcl.middle]", "#function-shadow-[parcl.middle]"],
  ["Generic-Function parcl.middle|shadow", "#nil-generic-function-parcl.middle|shadow"],
  ["import [parcl.middle]", "#function-import-[parcl.middle]"],
  ["Generic-Function parcl.middle|import", "#nil-generic-function-parcl.middle|import"],
  ["unexport [parcl.middle]", "#function-unexport-[parcl.middle]"],
  ["Generic-Function parcl.middle|unexport", "#nil-generic-function-parcl.middle|unexport"],
  ["export [parcl.middle]", "#function-export-[parcl.middle]"],
  ["Generic-Function parcl.middle|export", "#nil-generic-function-parcl.middle|export"],
  ["unintern [parcl.middle]", "#function-unintern-[parcl.middle]"],
  ["Generic-Function parcl.middle|unintern", "#nil-generic-function-parcl.middle|unintern"],
  ["intern [parcl.middle]", "#function-intern-[parcl.middle]"],
  ["Generic-Function parcl.middle|intern", "#nil-generic-function-parcl.middle|intern"],
  ["export status", "#concept-export-status"],
  ["find-symbol [parcl.middle]", "#function-find-symbol-[parcl.middle]"],
  ["Generic-Function parcl.middle|find-symbol", "#nil-generic-function-parcl.middle|find-symbol"],
  ["3.3.4.4 Middle Package-symbol Relation Functions", "#3.3.4.4-middle-package-symbol-relation-functions"],
  ["remove-local-nickname [parcl.middle]", "#function-remove-local-nickname-[parcl.middle]"],
  ["Generic-Function parcl.middle|remove-local-nickname", "#nil-generic-function-parcl.middle|remove-local-nickname"],
  ["add-local-nickname [parcl.middle]", "#function-add-local-nickname-[parcl.middle]"],
  ["Generic-Function parcl.middle|add-local-nickname", "#nil-generic-function-parcl.middle|add-local-nickname"],
  ["package-local nicknames", "#concept-package-local-nicknames"],
  ["unuse-package [parcl.middle]", "#function-unuse-package-[parcl.middle]"],
  ["Generic-Function parcl.middle|unuse-package", "#nil-generic-function-parcl.middle|unuse-package"],
  ["use-packages [parcl.middle]", "#function-use-packages-[parcl.middle]"],
  ["Generic-Function parcl.middle|use-packages", "#nil-generic-function-parcl.middle|use-packages"],
  ["3.3.4.3 Middle Package-package Relation Functions", "#3.3.4.3-middle-package-package-relation-functions"],
  ["shadow status", "#concept-shadow-status"],
  ["shadowing-symbols [parcl.middle]", "#function-shadowing-symbols-[parcl.middle]"],
  ["Generic-Function parcl.middle|shadowing-symbols", "#nil-generic-function-parcl.middle|shadowing-symbols"],
  ["3.3.4.2 Middle Package Functions", "#3.3.4.2-middle-package-functions"],
  ["keywordp [parcl.middle]", "#function-keywordp-[parcl.middle]"],
  ["Generic-Function parcl.middle|keywordp", "#nil-generic-function-parcl.middle|keywordp"],
  ["3.3.4.1 Middle Symbol Functions", "#3.3.4.1-middle-symbol-functions"],
  ["3.3.4 Middle Module", "#3.3.4-middle-module"],
  ["rename-package [parcl]", "#function-rename-package-[parcl]"],
  ["Function parcl|rename-package", "#nil-function-parcl|rename-package"],
  ["delete-package [parcl]", "#function-delete-package-[parcl]"],
  ["Function parcl|delete-package", "#nil-function-parcl|delete-package"],
  ["make-package [parcl]", "#function-make-package-[parcl]"],
  ["Function parcl|make-package", "#nil-function-parcl|make-package"],
  ["find-package [parcl]", "#function-find-package-[parcl]"],
  ["Function parcl|find-package", "#nil-function-parcl|find-package"],
  ["list-all-packages [parcl]", "#function-list-all-packages-[parcl]"],
  ["Function parcl|list-all-packages", "#nil-function-parcl|list-all-packages"],
  ["3.3.3.5 High Environment Functions", "#3.3.3.5-high-environment-functions"],
  ["shadowing-import [parcl]", "#function-shadowing-import-[parcl]"],
  ["Function parcl|shadowing-import", "#nil-function-parcl|shadowing-import"],
  ["shadow [parcl]", "#function-shadow-[parcl]"],
  ["Function parcl|shadow", "#nil-function-parcl|shadow"],
  ["unexport [parcl]", "#function-unexport-[parcl]"],
  ["Function parcl|unexport", "#nil-function-parcl|unexport"],
  ["export [parcl]", "#function-export-[parcl]"],
  ["Function parcl|export", "#nil-function-parcl|export"],
  ["import [parcl]", "#function-import-[parcl]"],
  ["Function parcl|import", "#nil-function-parcl|import"],
  ["unintern [parcl]", "#function-unintern-[parcl]"],
  ["Function parcl|unintern", "#nil-function-parcl|unintern"],
  ["intern [parcl]", "#function-intern-[parcl]"],
  ["Function parcl|intern", "#nil-function-parcl|intern"],
  ["find-symbol [parcl]", "#function-find-symbol-[parcl]"],
  ["Function parcl|find-symbol", "#nil-function-parcl|find-symbol"],
  ["3.3.3.4 High Package-symbol Relation Functions", "#3.3.3.4-high-package-symbol-relation-functions"],
  ["unuse-package [parcl]", "#function-unuse-package-[parcl]"],
  ["Function parcl|unuse-package", "#nil-function-parcl|unuse-package"],
  ["use-package [parcl]", "#function-use-package-[parcl]"],
  ["Function parcl|use-package", "#nil-function-parcl|use-package"],
  ["3.3.3.3 High Package-package Relation Functions", "#3.3.3.3-high-package-package-relation-functions"],
  ["package-shadowing-symbols [parcl]", "#function-package-shadowing-symbols-[parcl]"],
  ["Function parcl|package-shadowing-symbols", "#nil-function-parcl|package-shadowing-symbols"],
  ["package-used-by-list [parcl]", "#function-package-used-by-list-[parcl]"],
  ["Function parcl|package-used-by-list", "#nil-function-parcl|package-used-by-list"],
  ["package-use-list [parcl]", "#function-package-use-list-[parcl]"],
  ["Function parcl|package-use-list", "#nil-function-parcl|package-use-list"],
  ["package-nicknames [parcl]", "#function-package-nicknames-[parcl]"],
  ["Function parcl|package-nicknames", "#nil-function-parcl|package-nicknames"],
  ["package-name [parcl]", "#function-package-name-[parcl]"],
  ["Function parcl|package-name", "#nil-function-parcl|package-name"],
  ["packagep [parcl]", "#function-packagep-[parcl]"],
  ["Function parcl|packagep", "#nil-function-parcl|packagep"],
  ["3.3.3.2 High Package Functions", "#3.3.3.2-high-package-functions"],
  ["keywordp [parcl]", "#function-keywordp-[parcl]"],
  ["Function parcl|keywordp", "#nil-function-parcl|keywordp"],
  ["make-symbol [parcl]", "#function-make-symbol-[parcl]"],
  ["Function parcl|make-symbol", "#nil-function-parcl|make-symbol"],
  ["symbol-package [parcl]", "#function-symbol-package-[parcl]"],
  ["Function parcl|symbol-package", "#nil-function-parcl|symbol-package"],
  ["symbol-name [parcl]", "#function-symbol-name-[parcl]"],
  ["Function parcl|symbol-name", "#nil-function-parcl|symbol-name"],
  ["symbolp [parcl]", "#function-symbolp-[parcl]"],
  ["Function parcl|symbolp", "#nil-function-parcl|symbolp"],
  ["3.3.3.1 High Symbol Functions", "#3.3.3.1-high-symbol-functions"],
  ["*client* [parcl]", "#variable-*client*-[parcl]"],
  ["Variable parcl|*client*", "#nil-variable-parcl|*client*"],
  ["3.3.3 High Module", "#3.3.3-high-module"],
  ["trampoline", "#concept-trampoline"],
  ["traditional", "#concept-traditional"],
  ["3.3.2.2 The ``high'' system.", "#3.3.2.2-the-``high''-system."],
  ["3.3.2.1 The ``low'' system", "#3.3.2.1-the-``low''-system"],
  ["3.3.2 Implementations", "#3.3.2-implementations"],
  ["3.3.1.3 The Client Parameter", "#3.3.1.3-the-client-parameter"],
  ["fig:architecture", "#figure-fig:architecture"],
  ["low module", "#concept-low-module"],
  ["middle module", "#concept-middle-module"],
  ["client parameter", "#concept-client-parameter"],
  ["high module", "#concept-high-module"],
  ["3.3.1.2 Architecture", "#3.3.1.2-architecture"],
  ["native implementation", "#concept-native-implementation"],
  ["trampoline implementation", "#concept-trampoline-implementation"],
  ["traditional implementation", "#concept-traditional-implementation"],
  ["3.3.1.1.3 Package System State Storage", "#3.3.1.1.3-package-system-state-storage"],
  ["3.3.1.1.2 Intrinsic Usage", "#3.3.1.1.2-intrinsic-usage"],
  ["3.3.1.1.1 Extrinsic Usage", "#3.3.1.1.1-extrinsic-usage"],
  ["intrinsic", "#concept-intrinsic"],
  ["extrinsic", "#concept-extrinsic"],
  ["3.3.1.1 Usage Scenarios", "#3.3.1.1-usage-scenarios"],
  ["3.3.1 Introduction", "#3.3.1-introduction"],
  ["3.3 Parcl", "#3.3-parcl"],
  ["6-definition", "#footnote-6-definition"],
  ["6-reference", "#footnote-6-reference"],
  ["3.2.5.3 Circular objects and custom reader macros", "#3.2.5.3-circular-objects-and-custom-reader-macros"],
  ["3.2.5.2 Interpretation of Backquote and Sharpsign Single Quote", "#3.2.5.2-interpretation-of-backquote-and-sharpsign-single-quote"],
  ["structure literal", "#concept-structure-literal"],
  ["complex literal", "#concept-complex-literal"],
  ["reader macro", "#concept-reader-macro"],
  ["3.2.5.1 Interpretation of Sharpsign C and Sharpsign S", "#3.2.5.1-interpretation-of-sharpsign-c-and-sharpsign-s"],
  ["specification interpretation", "#concept-specification-interpretation"],
  ["3.2.5 Interpretation of unclear parts of the specification", "#3.2.5-interpretation-of-unclear-parts-of-the-specification"],
  ["3.2.4.2.5 Standard reader macros", "#3.2.4.2.5-standard-reader-macros"],
  ["3.2.4.2.4 Circular structure", "#3.2.4.2.4-circular-structure"],
  ["3.2.4.2.3 Structure instance creation", "#3.2.4.2.3-structure-instance-creation"],
  ["3.2.4.2.2 Read-time evaluation", "#3.2.4.2.2-read-time-evaluation"],
  ["3.2.4.2.1 Symbols and packages", "#3.2.4.2.1-symbols-and-packages"],
  ["3.2.4.2 Potential side effects for non-default clients", "#3.2.4.2-potential-side-effects-for-non-default-clients"],
  ["3.2.4.1.3 Standard reader macros (default client)", "#3.2.4.1.3-standard-reader-macros-(default-client)"],
  ["3.2.4.1.2 Read-time evaluation (default client)", "#3.2.4.1.2-read-time-evaluation-(default-client)"],
  ["3.2.4.1.1 Symbols and packages (default client)", "#3.2.4.1.1-symbols-and-packages-(default-client)"],
  ["3.2.4.1 Potential side effects for the default client", "#3.2.4.1-potential-side-effects-for-the-default-client"],
  ["side effects", "#concept-side-effects"],
  ["3.2.4 Side effects", "#3.2.4-side-effects"],
  ["3.2.3.3 Potential problems", "#3.2.3.3-potential-problems"],
  ["3.2.3.2 Recoverable errors", "#3.2.3.2-recoverable-errors"],
  ["recover [eclector.reader]", "#function-recover-[eclector.reader]"],
  ["Function eclector.reader|recover", "#nil-function-eclector.reader|recover"],
  ["3.2.3.1 Error recovery features", "#3.2.3.1-error-recovery-features"],
  ["recovery", "#concept-recovery"],
  ["error", "#concept-error"],
  ["3.2.3 Recovering from errors", "#3.2.3-recovering-from-errors"],
  ["read-from-string [eclector.concrete-syntax-tree]", "#function-read-from-string-[eclector.concrete-syntax-tree]"],
  ["Function eclector.concrete-syntax-tree|read-from-string", "#nil-function-eclector.concrete-syntax-tree|read-from-string"],
  ["read-preserving-whitespace [eclector.concrete-syntax-tree]", "#function-read-preserving-whitespace-[eclector.concrete-syntax-tree]"],
  ["Function eclector.concrete-syntax-tree|read-preserving-whitespace", "#nil-function-eclector.concrete-syntax-tree|read-preserving-whitespace"],
  ["read [eclector.concrete-syntax-tree]", "#function-read-[eclector.concrete-syntax-tree]"],
  ["Function eclector.concrete-syntax-tree|read", "#nil-function-eclector.concrete-syntax-tree|read"],
  ["3.2.2.7 CST reader features", "#3.2.2.7-cst-reader-features"],
  ["make-skipped-input-result [eclector.parse-result]", "#function-make-skipped-input-result-[eclector.parse-result]"],
  ["Generic-Function eclector.parse-result|make-skipped-input-result", "#nil-generic-function-eclector.parse-result|make-skipped-input-result"],
  ["make-expression-result [eclector.parse-result]", "#function-make-expression-result-[eclector.parse-result]"],
  ["Generic-Function eclector.parse-result|make-expression-result", "#nil-generic-function-eclector.parse-result|make-expression-result"],
  ["parse-result-client [eclector.parse-result]", "#type-parse-result-client-[eclector.parse-result]"],
  ["Class eclector.parse-result|parse-result-client", "#nil-class-eclector.parse-result|parse-result-client"],
  ["read-from-string [eclector.parse-result]", "#function-read-from-string-[eclector.parse-result]"],
  ["Function eclector.parse-result|read-from-string", "#nil-function-eclector.parse-result|read-from-string"],
  ["read-preserving-whitespace [eclector.parse-result]", "#function-read-preserving-whitespace-[eclector.parse-result]"],
  ["Function eclector.parse-result|read-preserving-whitespace", "#nil-function-eclector.parse-result|read-preserving-whitespace"],
  ["read [eclector.parse-result]", "#function-read-[eclector.parse-result]"],
  ["Function eclector.parse-result|read", "#nil-function-eclector.parse-result|read"],
  ["fig:read-call-sequence-parse-result", "#figure-fig:read-call-sequence-parse-result"],
  ["3.2.2.6 Parse result construction features", "#3.2.2.6-parse-result-construction-features"],
  ["unquote-splicing [eclector.quasiquotation]", "#function-unquote-splicing-[eclector.quasiquotation]"],
  ["Macro eclector.quasiquotation|unquote-splicing", "#nil-macro-eclector.quasiquotation|unquote-splicing"],
  ["unquote [eclector.quasiquotation]", "#function-unquote-[eclector.quasiquotation]"],
  ["Macro eclector.quasiquotation|unquote", "#nil-macro-eclector.quasiquotation|unquote"],
  ["quasiquote [eclector.quasiquotation]", "#function-quasiquote-[eclector.quasiquotation]"],
  ["Macro eclector.quasiquotation|quasiquote", "#nil-macro-eclector.quasiquotation|quasiquote"],
  ["3.2.2.5.5 Quasiquotation macros", "#3.2.2.5.5-quasiquotation-macros"],
  ["emit-1-using-info [eclector.quasiquotation]", "#function-emit-1-using-info-[eclector.quasiquotation]"],
  ["Generic-Function eclector.quasiquotation|emit-1-using-info", "#nil-generic-function-eclector.quasiquotation|emit-1-using-info"],
  ["emit-1 [eclector.quasiquotation]", "#function-emit-1-[eclector.quasiquotation]"],
  ["Generic-Function eclector.quasiquotation|emit-1", "#nil-generic-function-eclector.quasiquotation|emit-1"],
  ["emit [eclector.quasiquotation]", "#function-emit-[eclector.quasiquotation]"],
  ["Generic-Function eclector.quasiquotation|emit", "#nil-generic-function-eclector.quasiquotation|emit"],
  ["3.2.2.5.4 Quasiquotation emission protocol", "#3.2.2.5.4-quasiquotation-emission-protocol"],
  ["analyze-1-using-head [eclector.quasiquotation]", "#function-analyze-1-using-head-[eclector.quasiquotation]"],
  ["Generic-Function eclector.quasiquotation|analyze-1-using-head", "#nil-generic-function-eclector.quasiquotation|analyze-1-using-head"],
  ["analyze-1 [eclector.quasiquotation]", "#function-analyze-1-[eclector.quasiquotation]"],
  ["Generic-Function eclector.quasiquotation|analyze-1", "#nil-generic-function-eclector.quasiquotation|analyze-1"],
  ["analyze [eclector.quasiquotation]", "#function-analyze-[eclector.quasiquotation]"],
  ["Generic-Function eclector.quasiquotation|analyze", "#nil-generic-function-eclector.quasiquotation|analyze"],
  ["3.2.2.5.3 Quasiquotation analysis protocol", "#3.2.2.5.3-quasiquotation-analysis-protocol"],
  ["expand [eclector.quasiquotation]", "#function-expand-[eclector.quasiquotation]"],
  ["Generic-Function eclector.quasiquotation|expand", "#nil-generic-function-eclector.quasiquotation|expand"],
  ["3.2.2.5.2 Quasiquotation expansion protocol", "#3.2.2.5.2-quasiquotation-expansion-protocol"],
  ["a [eclector.quasiquotation]", "#type-a-[eclector.quasiquotation]"],
  ["Class eclector.quasiquotation|a", "#nil-class-eclector.quasiquotation|a"],
  ["3.2.2.5.1 Quasiquotation conditions", "#3.2.2.5.1-quasiquotation-conditions"],
  ["fig:quasiquotation-processing", "#figure-fig:quasiquotation-processing"],
  ["3.2.2.5 Quasiquotation features", "#3.2.2.5-quasiquotation-features"],
  ["readtablep [eclector.readtable]", "#function-readtablep-[eclector.readtable]"],
  ["Generic-Function eclector.readtable|readtablep", "#nil-generic-function-eclector.readtable|readtablep"],
  ["3.2.2.4 Readtable features", "#3.2.2.4-readtable-features"],
  ["set-standard-syntax-and-macros [eclector.reader]", "#function-set-standard-syntax-and-macros-[eclector.reader]"],
  ["Function eclector.reader|set-standard-syntax-and-macros", "#nil-function-eclector.reader|set-standard-syntax-and-macros"],
  ["set-standard-dispatch-macro-characters [eclector.reader]", "#function-set-standard-dispatch-macro-characters-[eclector.reader]"],
  ["Function eclector.reader|set-standard-dispatch-macro-characters", "#nil-function-eclector.reader|set-standard-dispatch-macro-characters"],
  ["set-standard-macro-characters [eclector.reader]", "#function-set-standard-macro-characters-[eclector.reader]"],
  ["Function eclector.reader|set-standard-macro-characters", "#nil-function-eclector.reader|set-standard-macro-characters"],
  ["set-standard-syntax-types [eclector.reader]", "#function-set-standard-syntax-types-[eclector.reader]"],
  ["Function eclector.reader|set-standard-syntax-types", "#nil-function-eclector.reader|set-standard-syntax-types"],
  ["3.2.2.3.6 Readtable initialization", "#3.2.2.3.6-readtable-initialization"],
  ["wrap-in-function [eclector.reader]", "#function-wrap-in-function-[eclector.reader]"],
  ["Generic-Function eclector.reader|wrap-in-function", "#nil-generic-function-eclector.reader|wrap-in-function"],
  ["function", "#concept-function"],
  ["wrap-in-unquote-splicing [eclector.reader]", "#function-wrap-in-unquote-splicing-[eclector.reader]"],
  ["Generic-Function eclector.reader|wrap-in-unquote-splicing", "#nil-generic-function-eclector.reader|wrap-in-unquote-splicing"],
  ["wrap-in-unquote [eclector.reader]", "#function-wrap-in-unquote-[eclector.reader]"],
  ["Generic-Function eclector.reader|wrap-in-unquote", "#nil-generic-function-eclector.reader|wrap-in-unquote"],
  ["wrap-in-quasiquote [eclector.reader]", "#function-wrap-in-quasiquote-[eclector.reader]"],
  ["Generic-Function eclector.reader|wrap-in-quasiquote", "#nil-generic-function-eclector.reader|wrap-in-quasiquote"],
  ["wrap-in-quote [eclector.reader]", "#function-wrap-in-quote-[eclector.reader]"],
  ["Generic-Function eclector.reader|wrap-in-quote", "#nil-generic-function-eclector.reader|wrap-in-quote"],
  ["quotation", "#concept-quotation"],
  ["3.2.2.3.5 S-expression creation", "#3.2.2.3.5-s-expression-creation"],
  ["new-value-for-fixup [eclector.reader]", "#function-new-value-for-fixup-[eclector.reader]"],
  ["Generic-Function eclector.reader|new-value-for-fixup", "#nil-generic-function-eclector.reader|new-value-for-fixup"],
  ["fixup [eclector.reader]", "#function-fixup-[eclector.reader]"],
  ["Generic-Function eclector.reader|fixup", "#nil-generic-function-eclector.reader|fixup"],
  ["fixup-graph [eclector.reader]", "#function-fixup-graph-[eclector.reader]"],
  ["Generic-Function eclector.reader|fixup-graph", "#nil-generic-function-eclector.reader|fixup-graph"],
  ["fixup-graph-p [eclector.reader]", "#function-fixup-graph-p-[eclector.reader]"],
  ["Generic-Function eclector.reader|fixup-graph-p", "#nil-generic-function-eclector.reader|fixup-graph-p"],
  ["reference-labeled-object [eclector.reader]", "#function-reference-labeled-object-[eclector.reader]"],
  ["Generic-Function eclector.reader|reference-labeled-object", "#nil-generic-function-eclector.reader|reference-labeled-object"],
  ["finalize-labeled-object [eclector.reader]", "#function-finalize-labeled-object-[eclector.reader]"],
  ["Generic-Function eclector.reader|finalize-labeled-object", "#nil-generic-function-eclector.reader|finalize-labeled-object"],
  ["labeled-object-state [eclector.reader]", "#function-labeled-object-state-[eclector.reader]"],
  ["Generic-Function eclector.reader|labeled-object-state", "#nil-generic-function-eclector.reader|labeled-object-state"],
  ["make-labeled-object [eclector.reader]", "#function-make-labeled-object-[eclector.reader]"],
  ["Generic-Function eclector.reader|make-labeled-object", "#nil-generic-function-eclector.reader|make-labeled-object"],
  ["find-labeled-object [eclector.reader]", "#function-find-labeled-object-[eclector.reader]"],
  ["Generic-Function eclector.reader|find-labeled-object", "#nil-generic-function-eclector.reader|find-labeled-object"],
  ["forget-labeled-object [eclector.reader]", "#function-forget-labeled-object-[eclector.reader]"],
  ["Generic-Function eclector.reader|forget-labeled-object", "#nil-generic-function-eclector.reader|forget-labeled-object"],
  ["note-labeled-object [eclector.reader]", "#function-note-labeled-object-[eclector.reader]"],
  ["Generic-Function eclector.reader|note-labeled-object", "#nil-generic-function-eclector.reader|note-labeled-object"],
  ["call-with-label-tracking [eclector.reader]", "#function-call-with-label-tracking-[eclector.reader]"],
  ["Generic-Function eclector.reader|call-with-label-tracking", "#nil-generic-function-eclector.reader|call-with-label-tracking"],
  ["5-definition", "#footnote-5-definition"],
  ["5-reference", "#footnote-5-reference"],
  ["4-definition", "#footnote-4-definition"],
  ["4-reference", "#footnote-4-reference"],
  ["fig:labeled-object-api-states", "#figure-fig:labeled-object-api-states"],
  ["fig:labeled-object-states", "#figure-fig:labeled-object-states"],
  ["3-definition", "#footnote-3-definition"],
  ["3-reference", "#footnote-3-reference"],
  ["labeled object", "#concept-labeled-object"],
  ["3.2.2.3.4 Labeled objects and references", "#3.2.2.3.4-labeled-objects-and-references"],
  ["with-forbidden-quasiquotation [eclector.reader]", "#function-with-forbidden-quasiquotation-[eclector.reader]"],
  ["Macro eclector.reader|with-forbidden-quasiquotation", "#nil-macro-eclector.reader|with-forbidden-quasiquotation"],
  ["with-quasiquotation-state [eclector.reader]", "#function-with-quasiquotation-state-[eclector.reader]"],
  ["Macro eclector.reader|with-quasiquotation-state", "#nil-macro-eclector.reader|with-quasiquotation-state"],
  ["unquote", "#concept-unquote"],
  ["backquote", "#concept-backquote"],
  ["quasiquote", "#concept-quasiquote"],
  ["call-with-state-value [eclector.reader]", "#function-call-with-state-value-[eclector.reader]"],
  ["Generic-Function eclector.reader|call-with-state-value", "#nil-generic-function-eclector.reader|call-with-state-value"],
  ["(setf state-value) [eclector.reader]", "#function-(setf-state-value)-[eclector.reader]"],
  ["Generic-Function eclector.reader|(setf state-value)", "#nil-generic-function-eclector.reader|(setf-state-value)"],
  ["state-value [eclector.reader]", "#function-state-value-[eclector.reader]"],
  ["Generic-Function eclector.reader|state-value", "#nil-generic-function-eclector.reader|state-value"],
  ["valid-state-value-p [eclector.reader]", "#function-valid-state-value-p-[eclector.reader]"],
  ["Generic-Function eclector.reader|valid-state-value-p", "#nil-generic-function-eclector.reader|valid-state-value-p"],
  ["state-value-type-error [eclector.reader]", "#type-state-value-type-error-[eclector.reader]"],
  ["Class eclector.reader|state-value-type-error", "#nil-class-eclector.reader|state-value-type-error"],
  ["table:minimal-reader-state-aspects", "#nil-table:minimal-reader-state-aspects"],
  ["consing dot", "#concept-consing-dot"],
  ["aspect, reader state", "#concept-aspect,-reader-state"],
  ["reader state", "#concept-reader-state"],
  ["3.2.2.3.3 Reader state protocol", "#3.2.2.3.3-reader-state-protocol"],
  ["evaluate-feature-expression [eclector.reader]", "#function-evaluate-feature-expression-[eclector.reader]"],
  ["Generic-Function eclector.reader|evaluate-feature-expression", "#nil-generic-function-eclector.reader|evaluate-feature-expression"],
  ["check-feature-expression [eclector.reader]", "#function-check-feature-expression-[eclector.reader]"],
  ["Generic-Function eclector.reader|check-feature-expression", "#nil-generic-function-eclector.reader|check-feature-expression"],
  ["evaluate-expression [eclector.reader]", "#function-evaluate-expression-[eclector.reader]"],
  ["Generic-Function eclector.reader|evaluate-expression", "#nil-generic-function-eclector.reader|evaluate-expression"],
  ["make-structure-instance [eclector.reader]", "#function-make-structure-instance-[eclector.reader]"],
  ["Generic-Function eclector.reader|make-structure-instance", "#nil-generic-function-eclector.reader|make-structure-instance"],
  ["find-character [eclector.reader]", "#function-find-character-[eclector.reader]"],
  ["Generic-Function eclector.reader|find-character", "#nil-generic-function-eclector.reader|find-character"],
  ["call-reader-macro [eclector.reader]", "#function-call-reader-macro-[eclector.reader]"],
  ["Generic-Function eclector.reader|call-reader-macro", "#nil-generic-function-eclector.reader|call-reader-macro"],
  ["interpret-symbol [eclector.reader]", "#function-interpret-symbol-[eclector.reader]"],
  ["Generic-Function eclector.reader|interpret-symbol", "#nil-generic-function-eclector.reader|interpret-symbol"],
  ["interpret-symbol-token [eclector.reader]", "#function-interpret-symbol-token-[eclector.reader]"],
  ["Generic-Function eclector.reader|interpret-symbol-token", "#nil-generic-function-eclector.reader|interpret-symbol-token"],
  ["check-symbol-token [eclector.reader]", "#function-check-symbol-token-[eclector.reader]"],
  ["Generic-Function eclector.reader|check-symbol-token", "#nil-generic-function-eclector.reader|check-symbol-token"],
  ["interpret-token [eclector.reader]", "#function-interpret-token-[eclector.reader]"],
  ["Generic-Function eclector.reader|interpret-token", "#nil-generic-function-eclector.reader|interpret-token"],
  ["read-token [eclector.reader]", "#function-read-token-[eclector.reader]"],
  ["Generic-Function eclector.reader|read-token", "#nil-generic-function-eclector.reader|read-token"],
  ["*skip-reason* [eclector.reader]", "#variable-*skip-reason*-[eclector.reader]"],
  ["Variable eclector.reader|*skip-reason*", "#nil-variable-eclector.reader|*skip-reason*"],
  ["note-skipped-input [eclector.reader]", "#function-note-skipped-input-[eclector.reader]"],
  ["Generic-Function eclector.reader|note-skipped-input", "#nil-generic-function-eclector.reader|note-skipped-input"],
  ["read-maybe-nothing [eclector.reader]", "#function-read-maybe-nothing-[eclector.reader]"],
  ["Generic-Function eclector.reader|read-maybe-nothing", "#nil-generic-function-eclector.reader|read-maybe-nothing"],
  ["read-common [eclector.reader]", "#function-read-common-[eclector.reader]"],
  ["Generic-Function eclector.reader|read-common", "#nil-generic-function-eclector.reader|read-common"],
  ["call-as-top-level-read [eclector.reader]", "#function-call-as-top-level-read-[eclector.reader]"],
  ["Generic-Function eclector.reader|call-as-top-level-read", "#nil-generic-function-eclector.reader|call-as-top-level-read"],
  ["fig:read-call-sequence-customization", "#figure-fig:read-call-sequence-customization"],
  ["3.2.2.3.2 Reader behavior protocol", "#3.2.2.3.2-reader-behavior-protocol"],
  ["read-delimited-list [eclector.reader]", "#function-read-delimited-list-[eclector.reader]"],
  ["Function eclector.reader|read-delimited-list", "#nil-function-eclector.reader|read-delimited-list"],
  ["read-from-string [eclector.reader]", "#function-read-from-string-[eclector.reader]"],
  ["Function eclector.reader|read-from-string", "#nil-function-eclector.reader|read-from-string"],
  ["read-preserving-whitespace [eclector.reader]", "#function-read-preserving-whitespace-[eclector.reader]"],
  ["Function eclector.reader|read-preserving-whitespace", "#nil-function-eclector.reader|read-preserving-whitespace"],
  ["read [eclector.reader]", "#function-read-[eclector.reader]"],
  ["Function eclector.reader|read", "#nil-function-eclector.reader|read"],
  ["3.2.2.3.1 Common Lisp reader compatible interface", "#3.2.2.3.1-common-lisp-reader-compatible-interface"],
  ["fig:read-call-sequence-ordinary", "#figure-fig:read-call-sequence-ordinary"],
  ["3.2.2.3 Ordinary reader features", "#3.2.2.3-ordinary-reader-features"],
  ["make-source-range [eclector.base]", "#function-make-source-range-[eclector.base]"],
  ["Generic-Function eclector.base|make-source-range", "#nil-generic-function-eclector.base|make-source-range"],
  ["source-position [eclector.base]", "#function-source-position-[eclector.base]"],
  ["Generic-Function eclector.base|source-position", "#nil-generic-function-eclector.base|source-position"],
  ["*client* [eclector.base]", "#variable-*client*-[eclector.base]"],
  ["Variable eclector.base|*client*", "#nil-variable-eclector.base|*client*"],
  ["range-length [eclector.base]", "#function-range-length-[eclector.base]"],
  ["Generic-Function eclector.base|range-length", "#nil-generic-function-eclector.base|range-length"],
  ["position-offset [eclector.base]", "#function-position-offset-[eclector.base]"],
  ["Generic-Function eclector.base|position-offset", "#nil-generic-function-eclector.base|position-offset"],
  ["stream-position [eclector.base]", "#function-stream-position-[eclector.base]"],
  ["Generic-Function eclector.base|stream-position", "#nil-generic-function-eclector.base|stream-position"],
  ["stream-position-condition [eclector.base]", "#type-stream-position-condition-[eclector.base]"],
  ["Class eclector.base|stream-position-condition", "#nil-class-eclector.base|stream-position-condition"],
  ["source location", "#concept-source-location"],
  ["client", "#concept-client"],
  ["3.2.2.2 Basic features", "#3.2.2.2-basic-features"],
  ["3.2.2.1.6 Package for CST features", "#3.2.2.1.6-package-for-cst-features"],
  ["3.2.2.1.5 Package for parse result construction features", "#3.2.2.1.5-package-for-parse-result-construction-features"],
  ["quasiquotation", "#concept-quasiquotation"],
  ["3.2.2.1.4 Package for quasiquotation features", "#3.2.2.1.4-package-for-quasiquotation-features"],
  ["readtable", "#concept-readtable"],
  ["3.2.2.1.3 Package for readtable features", "#3.2.2.1.3-package-for-readtable-features"],
  ["3.2.2.1.2 Package for ordinary reader features", "#3.2.2.1.2-package-for-ordinary-reader-features"],
  ["3.2.2.1.1 Package for basic features", "#3.2.2.1.1-package-for-basic-features"],
  ["3.2.2.1 Packages", "#3.2.2.1-packages"],
  ["3.2.2 External protocols", "#3.2.2-external-protocols"],
  ["2-definition", "#footnote-2-definition"],
  ["2-reference", "#footnote-2-reference"],
  ["concrete syntax tree", "#concept-concrete-syntax-tree"],
  ["parse result", "#concept-parse-result"],
  ["source tracking", "#concept-source-tracking"],
  ["3.2.1 Introduction", "#3.2.1-introduction"],
  ["3.2 Eclector User's Manual", "#3.2-eclector-user's-manual"],
  ["Changelog", "#changelog"],
  ["Function and macro and variable and type index", "#function-and-macro-and-variable-and-type-index"],
  ["Concept index", "#concept-index"],
  ["3.1.3.1 Lambda-list Parsing", "#3.1.3.1-lambda-list-parsing"],
  ["3.1.3 Internals", "#3.1.3-internals"],
  ["3.1.2.5 Future additions to this library", "#3.1.2.5-future-additions-to-this-library"],
  ["destructure-parameter-group [concrete-syntax-tree]", "#function-destructure-parameter-group-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|destructure-parameter-group", "#nil-generic-function-concrete-syntax-tree|destructure-parameter-group"],
  ["destructure-required-parameters [concrete-syntax-tree]", "#function-destructure-required-parameters-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|destructure-required-parameters", "#nil-generic-function-concrete-syntax-tree|destructure-required-parameters"],
  ["destructure-required-parameter [concrete-syntax-tree]", "#function-destructure-required-parameter-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|destructure-required-parameter", "#nil-generic-function-concrete-syntax-tree|destructure-required-parameter"],
  ["destructure-optional-parameters [concrete-syntax-tree]", "#function-destructure-optional-parameters-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|destructure-optional-parameters", "#nil-generic-function-concrete-syntax-tree|destructure-optional-parameters"],
  ["destructure-optional-parameter [concrete-syntax-tree]", "#function-destructure-optional-parameter-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|destructure-optional-parameter", "#nil-generic-function-concrete-syntax-tree|destructure-optional-parameter"],
  ["destructure-rest-parameter [concrete-syntax-tree]", "#function-destructure-rest-parameter-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|destructure-rest-parameter", "#nil-generic-function-concrete-syntax-tree|destructure-rest-parameter"],
  ["destructure-key-parameters [concrete-syntax-tree]", "#function-destructure-key-parameters-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|destructure-key-parameters", "#nil-generic-function-concrete-syntax-tree|destructure-key-parameters"],
  ["destructure-key-parameter [concrete-syntax-tree]", "#function-destructure-key-parameter-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|destructure-key-parameter", "#nil-generic-function-concrete-syntax-tree|destructure-key-parameter"],
  ["destructure-aux-parameters [concrete-syntax-tree]", "#function-destructure-aux-parameters-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|destructure-aux-parameters", "#nil-generic-function-concrete-syntax-tree|destructure-aux-parameters"],
  ["destructure-aux-parameter [concrete-syntax-tree]", "#function-destructure-aux-parameter-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|destructure-aux-parameter", "#nil-generic-function-concrete-syntax-tree|destructure-aux-parameter"],
  ["destructure-lambda-list [concrete-syntax-tree]", "#function-destructure-lambda-list-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|destructure-lambda-list", "#nil-generic-function-concrete-syntax-tree|destructure-lambda-list"],
  ["3.1.2.4 Destructuring lambda lists", "#3.1.2.4-destructuring-lambda-lists"],
  ["parse-macro-lambda-list [concrete-syntax-tree]", "#function-parse-macro-lambda-list-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|parse-macro-lambda-list", "#nil-generic-function-concrete-syntax-tree|parse-macro-lambda-list"],
  ["parse-destructuring-lambda-list [concrete-syntax-tree]", "#function-parse-destructuring-lambda-list-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|parse-destructuring-lambda-list", "#nil-generic-function-concrete-syntax-tree|parse-destructuring-lambda-list"],
  ["parse-define-method-combination-lambda-list [concrete-syntax-tree]", "#function-parse-define-method-combination-lambda-list-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|parse-define-method-combination-lambda-list", "#nil-generic-function-concrete-syntax-tree|parse-define-method-combination-lambda-list"],
  ["parse-define-modify-macro-lambda-list [concrete-syntax-tree]", "#function-parse-define-modify-macro-lambda-list-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|parse-define-modify-macro-lambda-list", "#nil-generic-function-concrete-syntax-tree|parse-define-modify-macro-lambda-list"],
  ["parse-defsetf-lambda-list [concrete-syntax-tree]", "#function-parse-defsetf-lambda-list-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|parse-defsetf-lambda-list", "#nil-generic-function-concrete-syntax-tree|parse-defsetf-lambda-list"],
  ["parse-specialized-lambda-list [concrete-syntax-tree]", "#function-parse-specialized-lambda-list-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|parse-specialized-lambda-list", "#nil-generic-function-concrete-syntax-tree|parse-specialized-lambda-list"],
  ["parse-generic-function-lambda-list [concrete-syntax-tree]", "#function-parse-generic-function-lambda-list-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|parse-generic-function-lambda-list", "#nil-generic-function-concrete-syntax-tree|parse-generic-function-lambda-list"],
  ["parse-ordinary-lambda-list [concrete-syntax-tree]", "#function-parse-ordinary-lambda-list-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|parse-ordinary-lambda-list", "#nil-generic-function-concrete-syntax-tree|parse-ordinary-lambda-list"],
  ["3.1.2.3.3 Parsers for standard lambda lists", "#3.1.2.3.3-parsers-for-standard-lambda-lists"],
  ["*macro-lambda-list-grammar* [concrete-syntax-tree]", "#variable-*macro-lambda-list-grammar*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*macro-lambda-list-grammar*", "#nil-variable-concrete-syntax-tree|*macro-lambda-list-grammar*"],
  ["*destructuring-lambda-list-grammar* [concrete-syntax-tree]", "#variable-*destructuring-lambda-list-grammar*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*destructuring-lambda-list-grammar*", "#nil-variable-concrete-syntax-tree|*destructuring-lambda-list-grammar*"],
  ["*define-method-combination-lambda-list-grammar* [concrete-syntax-tree]", "#variable-*define-method-combination-lambda-list-grammar*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*define-method-combination-lambda-list-grammar*", "#nil-variable-concrete-syntax-tree|*define-method-combination-lambda-list-grammar*"],
  ["*define-modify-macro-lambda-list-grammar* [concrete-syntax-tree]", "#variable-*define-modify-macro-lambda-list-grammar*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*define-modify-macro-lambda-list-grammar*", "#nil-variable-concrete-syntax-tree|*define-modify-macro-lambda-list-grammar*"],
  ["*defsetf-lambda-list-grammar* [concrete-syntax-tree]", "#variable-*defsetf-lambda-list-grammar*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*defsetf-lambda-list-grammar*", "#nil-variable-concrete-syntax-tree|*defsetf-lambda-list-grammar*"],
  ["*specialized-lambda-list-grammar* [concrete-syntax-tree]", "#variable-*specialized-lambda-list-grammar*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*specialized-lambda-list-grammar*", "#nil-variable-concrete-syntax-tree|*specialized-lambda-list-grammar*"],
  ["*generic-function-lambda-list-grammar* [concrete-syntax-tree]", "#variable-*generic-function-lambda-list-grammar*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*generic-function-lambda-list-grammar*", "#nil-variable-concrete-syntax-tree|*generic-function-lambda-list-grammar*"],
  ["*ordinary-lambda-list-grammar* [concrete-syntax-tree]", "#variable-*ordinary-lambda-list-grammar*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*ordinary-lambda-list-grammar*", "#nil-variable-concrete-syntax-tree|*ordinary-lambda-list-grammar*"],
  ["*standard-grammar* [concrete-syntax-tree]", "#variable-*standard-grammar*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*standard-grammar*", "#nil-variable-concrete-syntax-tree|*standard-grammar*"],
  ["3.1.2.3.2.3 Full grammars", "#3.1.2.3.2.3-full-grammars"],
  ["*macro-lambda-list* [concrete-syntax-tree]", "#variable-*macro-lambda-list*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*macro-lambda-list*", "#nil-variable-concrete-syntax-tree|*macro-lambda-list*"],
  ["*destructuring-lambda-list* [concrete-syntax-tree]", "#variable-*destructuring-lambda-list*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*destructuring-lambda-list*", "#nil-variable-concrete-syntax-tree|*destructuring-lambda-list*"],
  ["*define-method-combination-lambda-list* [concrete-syntax-tree]", "#variable-*define-method-combination-lambda-list*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*define-method-combination-lambda-list*", "#nil-variable-concrete-syntax-tree|*define-method-combination-lambda-list*"],
  ["*define-modify-macro-lambda-list*,concrete-syntax-tree", "#variable-*define-modify-macro-lambda-list*,concrete-syntax-tree"],
  ["*defsetf-lambda-list* [concrete-syntax-tree]", "#variable-*defsetf-lambda-list*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*defsetf-lambda-list*", "#nil-variable-concrete-syntax-tree|*defsetf-lambda-list*"],
  ["*specialized-lambda-list* [concrete-syntax-tree]", "#variable-*specialized-lambda-list*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*specialized-lambda-list*", "#nil-variable-concrete-syntax-tree|*specialized-lambda-list*"],
  ["*generic-function-lambda-list*,concrete-syntax-tree", "#variable-*generic-function-lambda-list*,concrete-syntax-tree"],
  ["*ordinary-lambda-list* [concrete-syntax-tree]", "#variable-*ordinary-lambda-list*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*ordinary-lambda-list*", "#nil-variable-concrete-syntax-tree|*ordinary-lambda-list*"],
  ["3.1.2.3.2.2 Lambda-list types", "#3.1.2.3.2.2-lambda-list-types"],
  ["*destructuring-rest-parameter-group*,concrete-syntax-tree", "#variable-*destructuring-rest-parameter-group*,concrete-syntax-tree"],
  ["*destructuring-required-parameter-group*,concrete-syntax-tree", "#variable-*destructuring-required-parameter-group*,concrete-syntax-tree"],
  ["*whole-parameter-group* [concrete-syntax-tree]", "#variable-*whole-parameter-group*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*whole-parameter-group*", "#nil-variable-concrete-syntax-tree|*whole-parameter-group*"],
  ["*environment-parameter-group* [concrete-syntax-tree]", "#variable-*environment-parameter-group*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*environment-parameter-group*", "#nil-variable-concrete-syntax-tree|*environment-parameter-group*"],
  ["*specialized-required-parameter-group* [concrete-syntax-tree]", "#variable-*specialized-required-parameter-group*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*specialized-required-parameter-group*", "#nil-variable-concrete-syntax-tree|*specialized-required-parameter-group*"],
  ["*generic-function-key-parameter-group* [concrete-syntax-tree]", "#variable-*generic-function-key-parameter-group*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*generic-function-key-parameter-group*", "#nil-variable-concrete-syntax-tree|*generic-function-key-parameter-group*"],
  ["*generic-function-optional-parameter-group* [concrete-syntax-tree]", "#variable-*generic-function-optional-parameter-group*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*generic-function-optional-parameter-group*", "#nil-variable-concrete-syntax-tree|*generic-function-optional-parameter-group*"],
  ["*aux-parameter-group* [concrete-syntax-tree]", "#variable-*aux-parameter-group*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*aux-parameter-group*", "#nil-variable-concrete-syntax-tree|*aux-parameter-group*"],
  ["*ordinary-key-parameter-group* [concrete-syntax-tree]", "#variable-*ordinary-key-parameter-group*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*ordinary-key-parameter-group*", "#nil-variable-concrete-syntax-tree|*ordinary-key-parameter-group*"],
  ["*ordinary-rest-parameter-group* [concrete-syntax-tree]", "#variable-*ordinary-rest-parameter-group*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*ordinary-rest-parameter-group*", "#nil-variable-concrete-syntax-tree|*ordinary-rest-parameter-group*"],
  ["*ordinary-optional-parameter-group* [concrete-syntax-tree]", "#variable-*ordinary-optional-parameter-group*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*ordinary-optional-parameter-group*", "#nil-variable-concrete-syntax-tree|*ordinary-optional-parameter-group*"],
  ["*ordinary-required-parameter-group* [concrete-syntax-tree]", "#variable-*ordinary-required-parameter-group*-[concrete-syntax-tree]"],
  ["Variable concrete-syntax-tree|*ordinary-required-parameter-group*", "#nil-variable-concrete-syntax-tree|*ordinary-required-parameter-group*"],
  ["3.1.2.3.2.1 Parameter groups", "#3.1.2.3.2.1-parameter-groups"],
  ["3.1.2.3.2 Variables", "#3.1.2.3.2-variables"],
  ["target [concrete-syntax-tree]", "#type-target-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|target", "#nil-class-concrete-syntax-tree|target"],
  ["destructuring-lambda-list [concrete-syntax-tree]", "#type-destructuring-lambda-list-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|destructuring-lambda-list", "#nil-class-concrete-syntax-tree|destructuring-lambda-list"],
  ["macro-lambda-list [concrete-syntax-tree]", "#type-macro-lambda-list-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|macro-lambda-list", "#nil-class-concrete-syntax-tree|macro-lambda-list"],
  ["define-method-combination-lambda-list [concrete-syntax-tree]", "#type-define-method-combination-lambda-list-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|define-method-combination-lambda-list", "#nil-class-concrete-syntax-tree|define-method-combination-lambda-list"],
  ["define-modify-macro-lambda-list [concrete-syntax-tree]", "#type-define-modify-macro-lambda-list-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|define-modify-macro-lambda-list", "#nil-class-concrete-syntax-tree|define-modify-macro-lambda-list"],
  ["defsetf-lambda-list [concrete-syntax-tree]", "#type-defsetf-lambda-list-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|defsetf-lambda-list", "#nil-class-concrete-syntax-tree|defsetf-lambda-list"],
  ["specialized-lambda-list [concrete-syntax-tree]", "#type-specialized-lambda-list-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|specialized-lambda-list", "#nil-class-concrete-syntax-tree|specialized-lambda-list"],
  ["generic-function-lambda-list [concrete-syntax-tree]", "#type-generic-function-lambda-list-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|generic-function-lambda-list", "#nil-class-concrete-syntax-tree|generic-function-lambda-list"],
  ["ordinary-lambda-list [concrete-syntax-tree]", "#type-ordinary-lambda-list-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|ordinary-lambda-list", "#nil-class-concrete-syntax-tree|ordinary-lambda-list"],
  ["children [concrete-syntax-tree]", "#function-children-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|children", "#nil-generic-function-concrete-syntax-tree|children"],
  ["lambda-list-type [concrete-syntax-tree]", "#type-lambda-list-type-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|lambda-list-type", "#nil-class-concrete-syntax-tree|lambda-list-type"],
  ["3.1.2.3.1.4 Classes for entire lambda lists", "#3.1.2.3.1.4-classes-for-entire-lambda-lists"],
  ["keyword-whole [concrete-syntax-tree]", "#type-keyword-whole-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|keyword-whole", "#nil-class-concrete-syntax-tree|keyword-whole"],
  ["keyword-environment [concrete-syntax-tree]", "#type-keyword-environment-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|keyword-environment", "#nil-class-concrete-syntax-tree|keyword-environment"],
  ["keyword-aux [concrete-syntax-tree]", "#type-keyword-aux-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|keyword-aux", "#nil-class-concrete-syntax-tree|keyword-aux"],
  ["keyword-allow-other-keys [concrete-syntax-tree]", "#type-keyword-allow-other-keys-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|keyword-allow-other-keys", "#nil-class-concrete-syntax-tree|keyword-allow-other-keys"],
  ["keyword-key [concrete-syntax-tree]", "#type-keyword-key-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|keyword-key", "#nil-class-concrete-syntax-tree|keyword-key"],
  ["keyword-body [concrete-syntax-tree]", "#type-keyword-body-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|keyword-body", "#nil-class-concrete-syntax-tree|keyword-body"],
  ["keyword-rest [concrete-syntax-tree]", "#type-keyword-rest-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|keyword-rest", "#nil-class-concrete-syntax-tree|keyword-rest"],
  ["keyword-optional [concrete-syntax-tree]", "#type-keyword-optional-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|keyword-optional", "#nil-class-concrete-syntax-tree|keyword-optional"],
  ["lambda-list-keyword [concrete-syntax-tree]", "#type-lambda-list-keyword-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|lambda-list-keyword", "#nil-class-concrete-syntax-tree|lambda-list-keyword"],
  ["3.1.2.3.1.3 Classes for lambda-list keywords", "#3.1.2.3.1.3-classes-for-lambda-list-keywords"],
  ["destructuring-parameter [concrete-syntax-tree]", "#type-destructuring-parameter-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|destructuring-parameter", "#nil-class-concrete-syntax-tree|destructuring-parameter"],
  ["specialized-required-parameter [concrete-syntax-tree]", "#type-specialized-required-parameter-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|specialized-required-parameter", "#nil-class-concrete-syntax-tree|specialized-required-parameter"],
  ["generic-function-optional-parameter [concrete-syntax-tree]", "#type-generic-function-optional-parameter-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|generic-function-optional-parameter", "#nil-class-concrete-syntax-tree|generic-function-optional-parameter"],
  ["aux-parameter [concrete-syntax-tree]", "#type-aux-parameter-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|aux-parameter", "#nil-class-concrete-syntax-tree|aux-parameter"],
  ["generic-function-key-parameter [concrete-syntax-tree]", "#type-generic-function-key-parameter-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|generic-function-key-parameter", "#nil-class-concrete-syntax-tree|generic-function-key-parameter"],
  ["ordinary-key-parameter [concrete-syntax-tree]", "#type-ordinary-key-parameter-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|ordinary-key-parameter", "#nil-class-concrete-syntax-tree|ordinary-key-parameter"],
  ["ordinary-optional-parameter [concrete-syntax-tree]", "#type-ordinary-optional-parameter-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|ordinary-optional-parameter", "#nil-class-concrete-syntax-tree|ordinary-optional-parameter"],
  ["simple-variable [concrete-syntax-tree]", "#type-simple-variable-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|simple-variable", "#nil-class-concrete-syntax-tree|simple-variable"],
  ["Initarg keyword [keyword-mixin]", "#nil-initarg-keyword-[keyword-mixin]"],
  ["keyword-mixin [concrete-syntax-tree]", "#type-keyword-mixin-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|keyword-mixin", "#nil-class-concrete-syntax-tree|keyword-mixin"],
  ["supplied-p [concrete-syntax-tree]", "#function-supplied-p-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|supplied-p", "#nil-generic-function-concrete-syntax-tree|supplied-p"],
  [":supplied-p", "#variable-:supplied-p"],
  ["Initarg supplied-p", "#nil-initarg-supplied-p"],
  ["supplied-p-mixin [concrete-syntax-tree]", "#type-supplied-p-mixin-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|supplied-p-mixin", "#nil-class-concrete-syntax-tree|supplied-p-mixin"],
  ["form [concrete-syntax-tree]", "#function-form-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|form", "#nil-generic-function-concrete-syntax-tree|form"],
  [":form", "#variable-:form"],
  ["Initarg form", "#nil-initarg-form"],
  ["form-mixin [concrete-syntax-tree]", "#type-form-mixin-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|form-mixin", "#nil-class-concrete-syntax-tree|form-mixin"],
  ["Class concrete-syntax-tree|parameter", "#nil-class-concrete-syntax-tree|parameter"],
  ["name [concrete-syntax-tree]", "#function-name-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|name", "#nil-generic-function-concrete-syntax-tree|name"],
  ["3.1.2.3.1.2 Classes for individual parameters", "#3.1.2.3.1.2-classes-for-individual-parameters"],
  ["whole-parameter-group [concrete-syntax-tree]", "#type-whole-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|whole-parameter-group", "#nil-class-concrete-syntax-tree|whole-parameter-group"],
  ["environment-parameter-group [concrete-syntax-tree]", "#type-environment-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|environment-parameter-group", "#nil-class-concrete-syntax-tree|environment-parameter-group"],
  ["destructuring-rest-parameter-group [concrete-syntax-tree]", "#type-destructuring-rest-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|destructuring-rest-parameter-group", "#nil-class-concrete-syntax-tree|destructuring-rest-parameter-group"],
  ["ordinary-rest-parameter-group [concrete-syntax-tree]", "#type-ordinary-rest-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|ordinary-rest-parameter-group", "#nil-class-concrete-syntax-tree|ordinary-rest-parameter-group"],
  ["singleton-parameter-group [concrete-syntax-tree]", "#type-singleton-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|singleton-parameter-group", "#nil-class-concrete-syntax-tree|singleton-parameter-group"],
  ["destructuring-required-parameter-group [concrete-syntax-tree]", "#type-destructuring-required-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|destructuring-required-parameter-group", "#nil-class-concrete-syntax-tree|destructuring-required-parameter-group"],
  ["specialized-required-parameter-group [concrete-syntax-tree]", "#type-specialized-required-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|specialized-required-parameter-group", "#nil-class-concrete-syntax-tree|specialized-required-parameter-group"],
  ["generic-function-optional-parameter-group [concrete-syntax-tree]", "#type-generic-function-optional-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|generic-function-optional-parameter-group", "#nil-class-concrete-syntax-tree|generic-function-optional-parameter-group"],
  ["aux-parameter-group [concrete-syntax-tree]", "#type-aux-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|aux-parameter-group", "#nil-class-concrete-syntax-tree|aux-parameter-group"],
  ["generic-function-key-parameter-group [concrete-syntax-tree]", "#type-generic-function-key-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|generic-function-key-parameter-group", "#nil-class-concrete-syntax-tree|generic-function-key-parameter-group"],
  ["ordinary-key-parameter-group [concrete-syntax-tree]", "#type-ordinary-key-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|ordinary-key-parameter-group", "#nil-class-concrete-syntax-tree|ordinary-key-parameter-group"],
  ["allow-other-keys [concrete-syntax-tree]", "#function-allow-other-keys-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|allow-other-keys", "#nil-generic-function-concrete-syntax-tree|allow-other-keys"],
  ["key-parameter-group [concrete-syntax-tree]", "#type-key-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|key-parameter-group", "#nil-class-concrete-syntax-tree|key-parameter-group"],
  ["ordinary-optional-parameter-group [concrete-syntax-tree]", "#type-ordinary-optional-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|ordinary-optional-parameter-group", "#nil-class-concrete-syntax-tree|ordinary-optional-parameter-group"],
  ["optional-parameter-group [concrete-syntax-tree]", "#type-optional-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|optional-parameter-group", "#nil-class-concrete-syntax-tree|optional-parameter-group"],
  ["ordinary-required-parameter-group [concrete-syntax-tree]", "#type-ordinary-required-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|ordinary-required-parameter-group", "#nil-class-concrete-syntax-tree|ordinary-required-parameter-group"],
  ["explicit-multi-parameter-group [concrete-syntax-tree]", "#type-explicit-multi-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|explicit-multi-parameter-group", "#nil-class-concrete-syntax-tree|explicit-multi-parameter-group"],
  ["keyword [concrete-syntax-tree]", "#function-keyword-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|keyword", "#nil-generic-function-concrete-syntax-tree|keyword"],
  [":keyword", "#variable-:keyword"],
  ["Initarg keyword", "#nil-initarg-keyword"],
  ["explicit-parameter-group [concrete-syntax-tree]", "#type-explicit-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|explicit-parameter-group", "#nil-class-concrete-syntax-tree|explicit-parameter-group"],
  ["implicit-parameter-group [concrete-syntax-tree]", "#type-implicit-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|implicit-parameter-group", "#nil-class-concrete-syntax-tree|implicit-parameter-group"],
  ["parameters [concrete-syntax-tree]", "#function-parameters-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|parameters", "#nil-generic-function-concrete-syntax-tree|parameters"],
  [":parameters", "#variable-:parameters"],
  ["Initarg parameters", "#nil-initarg-parameters"],
  ["multi-parameter-group-mixin [concrete-syntax-tree]", "#type-multi-parameter-group-mixin-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|multi-parameter-group-mixin", "#nil-class-concrete-syntax-tree|multi-parameter-group-mixin"],
  ["parameter [concrete-syntax-tree]", "#function-parameter-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|parameter", "#nil-generic-function-concrete-syntax-tree|parameter"],
  [":parameter", "#variable-:parameter"],
  ["Initarg parameter", "#nil-initarg-parameter"],
  ["singleton-parameter-group-mixin [concrete-syntax-tree]", "#type-singleton-parameter-group-mixin-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|singleton-parameter-group-mixin", "#nil-class-concrete-syntax-tree|singleton-parameter-group-mixin"],
  [":children", "#variable-:children"],
  ["Initarg children", "#nil-initarg-children"],
  ["parameter-group [concrete-syntax-tree]", "#type-parameter-group-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|parameter-group", "#nil-class-concrete-syntax-tree|parameter-group"],
  ["3.1.2.3.1.1 Classes for parameter groups", "#3.1.2.3.1.1-classes-for-parameter-groups"],
  ["grammar-symbol [concrete-syntax-tree]", "#type-grammar-symbol-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|grammar-symbol", "#nil-class-concrete-syntax-tree|grammar-symbol"],
  ["3.1.2.3.1 Classes for grammar symbols", "#3.1.2.3.1-classes-for-grammar-symbols"],
  ["3.1.2.3 Parsing lambda lists", "#3.1.2.3-parsing-lambda-lists"],
  ["reconstruct [concrete-syntax-tree]", "#function-reconstruct-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|reconstruct", "#nil-generic-function-concrete-syntax-tree|reconstruct"],
  ["3.1.2.2 Reconstructing CSTs from s-expressions", "#3.1.2.2-reconstructing-csts-from-s-expressions"],
  ["tenth [concrete-syntax-tree]", "#function-tenth-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|tenth", "#nil-generic-function-concrete-syntax-tree|tenth"],
  ["ninth [concrete-syntax-tree]", "#function-ninth-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|ninth", "#nil-generic-function-concrete-syntax-tree|ninth"],
  ["eighth [concrete-syntax-tree]", "#function-eighth-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|eighth", "#nil-generic-function-concrete-syntax-tree|eighth"],
  ["seventh [concrete-syntax-tree]", "#function-seventh-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|seventh", "#nil-generic-function-concrete-syntax-tree|seventh"],
  ["sixth [concrete-syntax-tree]", "#function-sixth-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|sixth", "#nil-generic-function-concrete-syntax-tree|sixth"],
  ["fifth [concrete-syntax-tree]", "#function-fifth-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|fifth", "#nil-generic-function-concrete-syntax-tree|fifth"],
  ["fourth [concrete-syntax-tree]", "#function-fourth-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|fourth", "#nil-generic-function-concrete-syntax-tree|fourth"],
  ["third [concrete-syntax-tree]", "#function-third-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|third", "#nil-generic-function-concrete-syntax-tree|third"],
  ["second [concrete-syntax-tree]", "#function-second-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|second", "#nil-generic-function-concrete-syntax-tree|second"],
  ["3.1.2.1.2 Additional API functions", "#3.1.2.1.2-additional-api-functions"],
  ["consp [concrete-syntax-tree]", "#function-consp-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|consp", "#nil-generic-function-concrete-syntax-tree|consp"],
  ["rest [concrete-syntax-tree]", "#function-rest-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|rest", "#nil-generic-function-concrete-syntax-tree|rest"],
  ["first [concrete-syntax-tree]", "#function-first-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|first", "#nil-generic-function-concrete-syntax-tree|first"],
  [":rest", "#variable-:rest"],
  ["Initarg rest", "#nil-initarg-rest"],
  [":first", "#variable-:first"],
  ["Initarg first", "#nil-initarg-first"],
  ["cons-cst [concrete-syntax-tree]", "#type-cons-cst-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|cons-cst", "#nil-class-concrete-syntax-tree|cons-cst"],
  ["atom-cst [concrete-syntax-tree]", "#type-atom-cst-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|atom-cst", "#nil-class-concrete-syntax-tree|atom-cst"],
  ["null [concrete-syntax-tree]", "#function-null-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|null", "#nil-generic-function-concrete-syntax-tree|null"],
  ["source [concrete-syntax-tree]", "#function-source-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|source", "#nil-generic-function-concrete-syntax-tree|source"],
  [":source", "#variable-:source"],
  ["Initarg source", "#nil-initarg-source"],
  ["raw [concrete-syntax-tree]", "#function-raw-[concrete-syntax-tree]"],
  ["Generic-Function concrete-syntax-tree|raw", "#nil-generic-function-concrete-syntax-tree|raw"],
  [":raw", "#variable-:raw"],
  ["Initarg raw", "#nil-initarg-raw"],
  ["cst [concrete-syntax-tree]", "#type-cst-[concrete-syntax-tree]"],
  ["Class concrete-syntax-tree|cst", "#nil-class-concrete-syntax-tree|cst"],
  ["3.1.2.1.1 Protocol", "#3.1.2.1.1-protocol"],
  ["3.1.2.1 Basic Use", "#3.1.2.1-basic-use"],
  ["3.1.2 User manual", "#3.1.2-user-manual"],
  ["1-definition", "#footnote-1-definition"],
  ["1-reference", "#footnote-1-reference"],
  ["3.1.1 Introduction", "#3.1.1-introduction"],
  ["3.1 Concrete Syntax Tree User's Manual", "#3.1-concrete-syntax-tree-user's-manual"],
  ["3 Manuals", "#3-manuals"],
  ["2.28 Project trucler", "#2.28-project-trucler"],
  ["2.27 Project tazivor", "#2.27-project-tazivor"],
  ["2.26 Project salmagundi", "#2.26-project-salmagundi"],
  ["2.25 Project s-expression-syntax", "#2.25-project-s-expression-syntax"],
  ["2.24 Project quaviver", "#2.24-project-quaviver"],
  ["2.23 Project parcl-core", "#2.23-project-parcl-core"],
  ["2.22 Project maclina", "#2.22-project-maclina"],
  ["2.21 Project khazern", "#2.21-project-khazern"],
  ["2.20 Project invistra", "#2.20-project-invistra"],
  ["2.19 Project inravina", "#2.19-project-inravina"],
  ["2.18 Project incless", "#2.18-project-incless"],
  ["2.17 Project iconoclast", "#2.17-project-iconoclast"],
  ["2.16 Project futhark", "#2.16-project-futhark"],
  ["2.15 Project extrinsicl", "#2.15-project-extrinsicl"],
  ["2.14 Project eclector", "#2.14-project-eclector"],
  ["2.13 Project ecclesia", "#2.13-project-ecclesia"],
  ["2.12 Project cyclosis", "#2.12-project-cyclosis"],
  ["2.11 Project ctype", "#2.11-project-ctype"],
  ["2.10 Project constrictor", "#2.10-project-constrictor"],
  ["2.9 Project consecution", "#2.9-project-consecution"],
  ["2.8 Project concrete-syntax-tree", "#2.8-project-concrete-syntax-tree"],
  ["2.7 Project common-macros", "#2.7-project-common-macros"],
  ["2.6 Project common-boot", "#2.6-project-common-boot"],
  ["2.5 Project clostrum", "#2.5-project-clostrum"],
  ["2.4 Project cleavir", "#2.4-project-cleavir"],
  ["2.3 Project buoy", "#2.3-project-buoy"],
  ["2.2 Project anatomicl", "#2.2-project-anatomicl"],
  ["2.1 Project acclimation", "#2.1-project-acclimation"],
  ["2 Details", "#2-details"],
  ["1 Overview", "#1-overview"]
  ];
